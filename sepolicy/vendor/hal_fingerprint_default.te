type hal_fingerprint_default, domain, binder_in_vendor_violators;
hal_server_domain(hal_fingerprint_default, hal_fingerprint)

type hal_fingerprint_default_exec, exec_type, vendor_file_type, file_type;

init_daemon_domain(hal_fingerprint_default)

binder_call(hal_fingerprint_default, vndservicemanager)
binder_call(hal_fingerprint_default, gx_fpd)
binder_use(hal_fingerprint_default)

add_service(hal_fingerprint_default, hal_fingerprint_default_service);

allow hal_fingerprint_default vnd_hal_fingerprint_default_service:service_manager { find };
allow hal_fingerprint_default vnd_gx_fpd_service:service_manager { find };
allow hal_fingerprint_default fingerprint_service:service_manager { find };

allow hal_fingerprint_default tee_device:chr_file { rw_file_perms };
allow hal_fingerprint_default uhid_device:chr_file { rw_file_perms };

# /data/system/users/0/fpdata
typeattribute hal_fingerprint_default data_between_core_and_vendor_violators;
allow hal_fingerprint_default fingerprintd_data_file:dir { rw_dir_perms };
allow hal_fingerprint_default fingerprintd_data_file:file { create_file_perms };

set_prop(hal_fingerprint_default, system_prop)
r_dir_file(hal_fingerprint_default, firmware_file)

# Need to add auth tokens to KeyStore
use_keystore(hal_fingerprint_default)
allow hal_fingerprint_default keystore:keystore_key { add_auth };
allow hal_fingerprint_default keystore_service:service_manager { find };

# For permissions checking
binder_call(hal_fingerprint_default, system_server);
allow hal_fingerprint_default permission_service:service_manager { find };

# RW persmissions for /dev/vndbinder
allow hal_fingerprint_default vndbinder_device:chr_file { rw_file_perms };

allow hal_fingerprint_default gx_fpd:binder { call transfer };